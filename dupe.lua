return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bn)local bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db=106,77,95,46,20,24,85,44,48,91,80,99,97,99,30,91,60,82,67,62,47,93,17,68,35,76,48,62,71,54,54,51,79,15,95,55,25,58,14,54,80,30,27,47,28,81,56,22,52,82,19,70 while bn~=71 do if bo>=775 then if bo>=1171 then if bo<=1302 then if bo<=1191 then if bo<1189 then do cm=function()local bn,dc dc,bn=bu(cx,cy,(cy+2))cy=(cy+j);do return((bn*256)+dc);end end end bo=1191 else cb=function()local j,bn,dc,dd,de,df,dg,dh=67,35,19,13,72,32,64,17,60,51,36,63,97,92,53,28,24,54,45,70,74 while j~=33 do if bn<=163 then if bn<=73 then if bn>43 then dh=br()bn=96 else dc,dd,de,df,dg,dh=nil bn=73 end else if bn<=96 then dc=br()bn=141 else if bn<161 then bn=163 do if((dh==0 and dc==0))then do return 0 end end end else bn=212 do dd=((-1)^ct(31,dc,1))end end end end else if bn<=275 then if bn<=212 then bn=230 df=ct(20,dc,11)else if bn>236 then bn=303 dg=1 else bn=275 de=(ct(0,dc,20)*4294967296+dh)end end else if bn<=303 then bn=331 if not(df~=0)then if not(de==0)then df=1 dg=0 else return(dd*0)end elseif 2047~=df then else if 0==de then do do do return(dd*(0/0))end end end else return(dd*(1/0))end end else if bn<358 then bn=360 return(dd*(2^(df-i))*(de/co+dg))else break end end end end end end bo=1230 end else if bo<=1230 then bo=1258 cp=function(i,i,i,i)local i,j,bn,dc=73,49,48,18,29,74,96,82,33,14,38,52,66 while i~=27 do if j<=124 then if j>=77 then if j<118 then do bn=br()end j=124 else dc=cx:sub(cy,(cy+bn-1))j=149 end else j=77 bn,dc=nil end else if j>=172 then if j<188 then j=196 return dc;else i=27;end else j=172 cy=(cy+bn);end end end end else if bo>1266 then bo=1338 bs={}else bv=function(...)return{...},bp('#',...)end bo=1302 end end end else if bo>=1471 then if bo>=1494 then if bo<1505 then bo=1511 return cg(da(ca()),{},ca())();else break end else bo=1494 cg=function(i,j,bn,dc,dc,dc)local dc,dd,de,df,dg dc=ce de=i[z]dd=i[123]dg=i[110]do df=i[28]end do return function(...)local i,z,dc,dh,di,dj,dk,dl,dm dj=1 dl=-1 dc=-1 dh={}dm={...}i=(bp('#',...)-1)do di={}end dk={}for dc=0,i do if(not(dc<de))then do dh[(dc-de)]=dm[(dc+1)];end else dk[dc]=dm[(dc+1)];end;end;do z=(i-de+1)end while true do local z,dc,dn,_do,dp,dq,dr,ds,dt,du dc=df[dj]do dn=dc[52]end du=dc[147]dt=dc[179]dr=dc[118]ds=dc[57]do dq=dc[130]end dp=dc[115]_do=dc[178]do z=dc[15]end if not(dn>47)then if not(dn>23)then if not(dn>11)then do if not(dn<6)then do if not(dn>8)then if not(dn>6)then do dk[z]=(function()dk[dt]=cg(dd[dc[118]],nil,bn);end)end else do if(dn>7)then dk[dt]=(not dk[_do]);else local du,dv,dw,dx dx=dt do dv=((ds-1)*50)end du=dk[dx]dw=_do for dy=1,dw do du[(dv+dy)]=dk[(dx+dy)]end;end end end else if not(dc[52]>9)then local du,dv,dw du=dc[179]dw=dk[du]dv=_do for dx=1,dv do dw[dx]=dk[(du+dx)]end;else if not(dn~=10)then else dk[dc[y]]();end end end end else do if not(dc[52]>2)then do if not(dn>0)then dk[dt]=dg[_do]else do if(dc[52]>1)then j[_do]=dk[dc[179]];else dk[dt]=(dk[_do]*dg[ds]);end end end end else if not(dn<4)then if(dn<5)then local y y=dc[179]dk[y]=dk[y](dk[y+1]);else local y,du,dv dv=dd[dc[178]]do y=nil end du={}y=cw({},{__index=function(dw,dw)local dw=du[dw];return dw[1][dw[2]];end,__newindex=function(dw,dw,dx)local dw=du[dw]dw[1][dw[2]]=dx;end;});for dw=1,ds do local dx dx=dc[41][dw]if dx[1]then du[(dw-1)]={dk,dx[2],nil,nil,nil};else du[(dw-1)]={j,dx[2],nil};end;di[(#di+1)]=du;end;dk[dc[179]]=cg(dv,y,bn);end else df[dj]=bs[dc[130]];dj=_do;end end end end end else if not(dn>17)then if not(dn<15)then if not(dn<16)then if(dn<17)then do if not dk[ds]then dk[dt]=dk[ds];dj=_do;end;end else local y,du,dv,dw do du=dt end y,dv=bv(dk[du](cz(dk,(du+1),_do)))do dl=(dv+du-1)end dw=0 for dv=du,dl do dw=(dw+1);dk[dv]=y[dw];end;end else local y,du du,y=bv(...)do for y=p,dt do dk[(y-1)]=du[y]end end end else if not(dn>12)then do if((dk[dt]<dk[ds]))then dj=_do;end;end else if(dn>bg)then do return dk[dp][dq]end else local p do p=dt end dk[p]=dk[p](cz(dk,p+1,dl));end end end else if not(dn<21)then if not(dn<22)then if 22==dn then df[dj]={[52]=dn- -47,[130]=0,[179]=7,[178]=7,[57]=11};do dj=(dj-1);end else dk[dt]=bn[dg[_do]];end else do dk[dt]=(dk[_do]+dk[ds]);end end else do if not(dc[52]<19)then if 19==dn then if((dg[dt]<dk[ds]))then dj=_do;end;else local p,y,bg do p=dt end y={dk[p](dk[p+1])}bg=0 for du=p,ds do bg=(bg+1);dk[du]=y[bg];end end else dk[dt]=(dk[dc[178]]%dg[ds]);end end end end end else if not(dn<36)then do if not(dn<42)then if not(dc[52]>44)then if not(dn<43)then if(dn<44)then do dg=ce[dc[179]](dg)end else do dk[dc[179]]=(dk[_do]+dg[ds]);end end else local p,y p=dc[179]y=_do for bg=p,y do dk[bg]=dh[(bg-p)];end;end else if not(dn<46)then do if(dn<47)then dk[dc[179]]=#dk[_do];else dk[z]=(function()dk[dt]=cg(dd[dr],nil,bn);end)end end else dj=((dk[dt]<dk[ds])and _do or dj)end end else if not(dn>38)then if not(dn<37)then if(dc[52]<38)then local p,y y=dt p={}if(#di>0)then for bg=1,#di do local dh dh=di[bg]for bg=0,#dh do local du,dv,dw do du=dh[bg]end dv=du[1]dw=du[2]if(dv==dk and dw>=0)then p[dw]=dv[dw]du[1]=p end end end end return cz(dk,y,dl);else local p,y,bg,dh,du y=dt dh=dc[57]bg=(y+2)du={dk[y](dk[y+1],dk[bg])}for dv=1,dh do dk[(bg+dv)]=du[dv]end p=dk[(y+3)]if p then dk[bg]=p else dj=_do;end;end else local p,y do p=dt end y=dk[_do]dk[(p+1)]=y;dk[p]=y[dk[ds]];end else if not(dn>39)then dj=((dg[dt]<dk[ds])and _do or dj)else if(dn<41)then local p,y p=dt do y={}end for bg=1,#di do local dh do dh=di[bg]end for bg=0,#dh do local du,dv,dw do dw=dh[bg]end dv=dw[1]do du=dw[2]end if(dv==dk and du>=p)then y[du]=dv[du];dw[1]=y;end;end;end;else if dt then dt=false;ds=_do;dj=(dj-1);else dj=(dj+dc[178]+ds);end end end end end end else if not(dn>29)then if not(dn>26)then if not(dn>24)then dl=dc[dt];else if 25==dn then dk[dt]=dk[_do]else df[dj]={[178]=22,[130]=0,[179]=9,[57]=12,[52]=dn-26};do dj=(dj-1);end end end else if not(dn>27)then dk[dc[dt]]=dk else if 28==dn then local p,y,bg y=dt do p={dk[y](cz(dk,y+1,_do))}end do bg=0 end for dh=y,ds do bg=(bg+1);dk[dh]=p[bg];end else local p p=dc[179]do return cz(dk,p,(p+_do))end;end end end else if not(dn>32)then if not(dn<31)then do if(dn<32)then dk[dt]={};else dj=_do;end end else do if(not(dk[dt]<dk[ds]))then dj=_do;end;end end else do if not(dn>33)then dk[dt]=(dk[dc[178]]^dk[ds]);else if(dn>34)then dk[dc[179]]=ce[dr]else dk={};do for p=0,i do if(p<de)then dk[p]=dm[(p+1)];else break end;end;end end end end end end end end else if not(dn>71)then if not(dn>59)then if not(dn>53)then if not(dn>50)then if not(dn<49)then if not(dn~=bf)then dk[dt]=dk[_do];else ce[dt]()end else dk[z]();end else if not(dn>51)then if((dk[dt]>dk[dc[57]]))then do dj=_do;end end;else if(dn>52)then local i i=dt dk[i]=dk[i](cz(dk,i+1,_do));else local i,p do i=_do end p=dk[i]for y=(i+1),ds do p=(p..dk[y]);end;do dk[dt]=p;end end end end else if not(dn>56)then if not(dc[52]>54)then dk[dt]=(dk[_do]-dk[ds]);else if(dn<56)then do dk[dt][dg[_do]]=dg[ds];end else ce[dt]={}end end else if not(dn>57)then dk[dt]=bn[dg[_do]][dg[ds]];else if(dn<59)then do df[dj]=bs[dq];end dj=_do;else dk[dt]=(dk[_do]/dg[ds]);end end end end else if not(dn<66)then if not(dn>68)then do if not(dn<67)then if not(dn~=67)then elseif dk[dt]then dj=_do;end else local i i={}while#di>0 do for p=1,#di do local p=di[p]for y=0,#p do local p=p[y]local y=p[1]local z=p[2]if y==dk and z>=0 then i[z]=y[z]p[1]=i end end end break end return false;end end else do if not(dn<70)then if(dn>70)then dk[dt]=(dk[_do]%dk[ds]);else dk[dt]=(dk[_do]/dk[dc[57]]);end else dk[dt]=dk[_do][dg[ds]];end end end else do if not(dn>62)then do if not(dn>60)then local i i=dt do return dk[i](cz(dk,(i+1),_do))end;else if(dc[52]>61)then dk[dt]=nil;else ce[dt]=ce[dr]end end end else if not(dn<64)then do if(dn>64)then local i,p,y i=dt p=dk[(i+2)]do y=(dk[i]+p)end dk[i]=y;if((p>0))then if(not(y>dk[i+1]))then dj=_do;dk[(i+3)]=y;end elseif(not(y<dk[i+1]))then dj=_do;dk[(i+3)]=y;end else local i i=dk[dp][dc[130]]do dk[dp][dq]=(i..dk[ds]);end end end else ce[dt]=dk[dr]end end end end end else if not(dc[52]>83)then if not(dn>77)then if not(dn<75)then do if not(dn<76)then do if not(dn~=76)then for i=dt,_do do dk[i]=nil;end;else local i i=dc[l]dk[i](dk[(i+1)])end end else df[dj]={[130]=0,[179]=0,[178]=2,[52]=dn- -2,[n]=h};dj=(dj-1);end end else if not(dn<73)then if(dn>73)then dk[dt][dk[_do]]=dk[ds];else dk[dt]=j[_do];end else bn=dk[dc[dt]]end end else if not(dc[52]>80)then if not(dc[52]>78)then do return dk[dt]end else if(dn>79)then local h,i,j j=dt i=dk[j]do h=dk[(j+2)]end if((h>0))then do if((i>dk[j+1]))then do dj=dc[178];end else dk[(j+3)]=i;end end elseif((i<dk[j+1]))then do dj=_do;end else dk[(j+3)]=i;end else local h,i i=dt h=dk[_do]dk[(i+1)]=h;do dk[i]=h[dg[ds]];end end end else if not(dn>81)then dk[dt]=cg(dd[_do],nil,bn);else if(dn<83)then dk[dt]=(dk[_do]*dk[dc[b]]);else dk[dt]=ce[dr]end end end end else if not(dn>89)then do if not(dn>86)then do if not(dn>84)then dk[dt]=(not(_do==0));dj=(dj+1);else do if(dn<f)then if not dk[dc[179]]then dj=_do;end;else dj=((dg[dt]~=dg[dc[57]])and _do or dj)end end end end else if not(dn<88)then if(dn>88)then ce=dk else df[dj]={[57]=5,[178]=1,[52]=dn- -c,[179]=22,[130]=0};dj=(dj-1);end else if(not(dk[dt]==dk[dc[57]]))then do dj=_do;end end;end end end else if not(dn<93)then if not(dn>93)then dk[dt]=-dk[_do];else if(dc[52]<95)then local b b=dt dk[b](cz(dk,(b+1),_do))else do bn[dg[_do]]=dk[dt];end end end else do if not(dc[52]>90)then do dk[dt]=dk[_do][dk[ds]];end else if(dn>91)then elseif(dg[ds]~=dk[dc[179]])then do dj=_do;end end end end end end end end end dj=(dj+1);end;end;end end end else if bo>=1384 then if bo<1427 then do ce={}end bo=1431 else ch={}bo=1471 end else bo=1384 da=function(b,c,c,c,c)local c,f,h,i,j,l,n,p=77,43,84,29,83,79,33,25,34,52,45,51,95,47,76,59,98,41,99,79,39,43,97,78,41,70 while c~=52 do if f>=310 then if f>=414 then if f<=452 then if f<447 then f=452 h[110]=n else for c=1,br()do local y,z,bf,bg,bn,dc=84,77,95,85,50,50,35,62,33,34,15,79,91,23,91,26,12,27,95,17,74,42,43,26,55,32 while y~=42 do if z<=262 then if z<=155 then if z>=135 then if z<149 then z=155 bg[m]=cq();else z=170 bg[41]={};end else if z>85 then bg={{},nil,nil,nil,nil}z=135 else bf,bg,bn,dc=nil z=115 end end else if z>=210 then if z<=210 then bf=br()z=238 else if z<258 then z=262 bn=bw(dc,1,2)else z=289 bg[11]=bn end end else if z<187 then if 1==cq()then do for m=1,cq()do bg[41][m]={cq()==0,br()}end end end z=190 else z=210 do dc=br()end end end end else if z<=347 then if z>=322 then if z<342 then bg[178]=bw(bf,12,bi);z=347 else z=371 do bg[57]=bw(dc,21,29);end end else if z<298 then z=304 bg[52]=bw(bf,1,11);else z=322 bg[179]=bw(dc,3,11);end end else if z>=419 then if z>=458 then if z<473 then z=476 l[c]=bg;else y=42;end else bg[15]=-bg[w]z=458 end else if z<390 then z=397 do bg[130]=bw(dc,12,20);end else bg[115]=-bg[179]z=419 end end end end end end f=468 end else if f<=468 then h[28]=l;f=510 else if f<549 then f=557 return h;else break end end end else if f<=336 then if f<334 then f=336 h[123]=i;else p=br()f=367 end else if f>374 then f=414 do for c=1,p do local m,w,y,z=58,40,11,11,75,63,99,87,20,61,91,92,92,60 while m~=44 do if w>=138 then if w<=138 then w=185 if(1==y)then z=(0~=cq());elseif(not(y~=0))then z=cb();elseif(not(y~=2))then z=cp();elseif(3==y)then z=b[cp()];end;else if w>192 then m=44;else w=204 n[c]=z;end end else if w<=40 then w=76 y,z=nil else if w<109 then y=cq()w=112 else z=nil w=138 end end end end end end else n={}f=387 end end end else if f>=184 then if f<=200 then if f>187 then f=248 for b=(#bs+1),(#bs+j)do local c,m,w,y,z=59,50,93,55,95,20,35,85,79,62,25,22,58,37,36,55,35,47,10,13,96,87,24 while c~=36 do if m>=287 then if m<=346 then if m<=303 then if m<298 then m=303 z[179]=bw(w,3,11);else m=331 z[118]=bw(w,12,20);end else if m<343 then z[57]=bw(w,21,29);m=346 else do z[178]=bw(y,12,33);end m=383 end end else if m>=429 then if m<440 then m=448 bs[b]=z;else c=36;end else if m>388 then m=429 do z[15]=-z[57]end else m=414 do z[115]=-z[179]end end end end else if m<=136 then if m<=72 then if m>56 then m=88 z={}else w,y,z=nil m=72 end else if m>97 then w=br()m=151 else do z[147]=cq();end m=136 end end else if m>=222 then if m>227 then z[52]=bw(y,be,11);m=287 else m=255 do z[11]=bw(w,1,2);end end else if m>158 then m=222 z[130]=cq();else m=195 y=br()end end end end end end else f=200 do j=br()end end else if f<266 then f=271 h[164]=cq();else for b=1,br()do i[b-1]=da();end f=310 end end else if f>=128 then if f<148 then do i={}end f=154 else h={}f=184 end else if f<74 then f=82 h,i,j,l,n,p=nil else f=128 l={}end end end end end end end end end else if bo<=933 then if bo>=861 then if bo>=885 then if bo>894 then bo=971 for b=1,31 do do cv[b]=db end db=(db*u)end else bo=933 do db=2 end end else cv={[0]=1}bo=885 end else if bo>783 then co=(2^s)bo=861 else cc=''bo=820 end end else if bo>=1064 then if bo<=1064 then cy=1 bo=1102 else if bo>1105 then do cq=function()local b b=bu(cx,cy,cy)cy=(cy+1);return b;end end bo=1171 else bo=1149 br=function()local b,c,f,h do b,c,h,f=bu(cx,cy,(cy+3))end cy=(cy+4);return((f*16777216)+(h*65536)+(c*256)+b);end end end else if bo<=971 then bo=1004 ct=function(b,c,f,h,h)local h,i,j=75,52,96,95,11,95,45,52,79,24,60,33,26 while h~=30 do if i<=136 then if i>=91 then if i>93 then i=157 do j=((c/cv[b])%cv[f])end else j=nil i=136 end else i=91 j=nil end else if i<=157 then do j=(j-j%1)end i=190 else if i>192 then h=30;else i=227 return j end end end end end else if bo<1014 then bo=1019 cu=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local f,h=0,1 while b>q and c>0 do local i,j=b%16,c%16 f=f+cr[i+1][j+d]*h b=(b-i)/16 c=(c-j)/16 h=h*16 end f=f+b*h+c*h return f end)else bw=function(b,c,d,f,f,f)local f f=((b/2^(c-1))%2^((d-1)-(c-1)+1))return(f-f%1);end bo=1064 end end end end end else if bo<=402 then if bo<=223 then if bo<=126 then if bo<119 then bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db=nil bo=126 else bo=152 bu=string.byte end else if bo>=196 then if bo<219 then cd=string.sub bo=223 else ci=string.gsub bo=256 end else do by=string.char end bo=196 end end else if bo>=354 then if bo>=386 then if bo<398 then do ca=(getfenv or function()return _ENV end)end bo=402 else cw=setmetatable bo=423 end else ck=math.ldexp bo=386 end else if bo<=256 then do cs=string.rep end bo=301 else if bo>310 then bz=table.insert bo=354 else bo=324 cf=table.concat end end end end else if bo<=547 then if bo>=504 then if bo>=524 then if bo>532 then do bx=math.floor end bo=582 else bo=547 cn=math.abs end else do cj=(function(b,c)if g==cl(b)then return bm else return false end end)end bo=524 end else if bo>427 then bo=504 cl=type else bo=470 bp=select end end else if bo>=637 then if bo<=637 then bo=680 do for b=0,255 do bq[b]=by(b);end end else if bo>689 then bo=775 cr={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,r,13,12,x,14,},{2,bj,0,1,6,7,4,5,10,e,8,9,14,15,12,13,},{3,bd,1,t,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,a,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,bb,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,o,3,2,ba,4,7,6,},{10,11,8,9,bl,15,12,13,bk,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,v,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,bc,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{k,14,13,12,bh,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}else cx=cifunction(a,b,b,b)return bq[bt(a,16)]end)bo=728 end end else if bo>=600 then if bo>609 then bq={}bo=637 else bo=622 bt=tonumber end else bo=600 cz=(unpack or table.unpack)end end end end end end end)(12,57,3,1,11,86,'number',1,1023,2,15,179,147,57,0,1,0,10,52,0,2,3,57,15,179,164,5,12,0,2,1,49,13,11,33,3,2,14,true)
