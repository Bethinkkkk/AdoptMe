return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=85,86,27,77,83,62,48,51,22,23,25,29,42,52,38,56,95,63,17,67,76,36,61,23,81,99,58,68,12,26,96,17,86,13,93,72,88,71,25,16,76,79,29,49,27,91,20,63,45,20,96,29,92,32 while bh~=75 do if bi<=765 then if bi>=420 then if bi>=616 then if bi>=685 then if bi<=685 then bi=716 do for cw=0,255 do cj[cw]=bk(cw);end end else if bi<758 then bi=765 cb=bmfunction(cw,cx,cx)return cj[co(cw,16)]end)else bi=788 do by={{0,1,2,3,bf,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,p,6,7,4,be,10,o,c,e,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,bb,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,ba,12,15,14,1,0,3,bd,5,a,7,6,},{10,x,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{bg,g,9,i,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,l,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}end end end else if bi<=616 then bi=637 do bu=(unpack or table.unpack)end else if bi<645 then bi=653 co=tonumber else bi=685 cj={}end end end else if bi>=493 then if bi>=524 then if bi>533 then bi=616 cv=math.floor else bi=573 cn=math.abs end else cm=(function(a,c,c)if not(bs(a)~='number')then return true else return false end end)bi=524 end else if bi>428 then bi=493 bs=type else bi=445 do cc=select end end end end else if bi<=198 then if bi>=153 then if bi<=153 then bk=string.char bi=178 else if bi<195 then cu=string.sub bi=198 else bm=string.gsub bi=218 end end else if bi<113 then bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil bi=120 else br=string.byte bi=153 end end else if bi<=296 then if bi>=251 then if bi>253 then bi=326 ct=table.insert else bi=296 bn=table.concat end else cd=string.rep bi=251 end else if bi<=326 then ci=math.ldexp bi=351 else if bi<376 then do cg=(getfenv or function()return _ENV end)end bi=379 else bz=setmetatable bi=420 end end end end end else if bi>=1129 then if bi>=1244 then if bi<=1311 then if bi<=1244 then do bq=function(a,c,c,c)local c,e,g,i,l,o,p,x=88,48,65,67,44,85,48,49,48,98,58,36,95,69,90,67,99,79,52,19,29,48,89,86 while c~=48 do if e>=303 then if e<=384 then if e<=332 then if e<326 then e=332 g={}else for ba=1,x do local bb,bd,be,bf=85,44,37,48,76,32,91,19,60,31,39,67,48 while bb~=44 do if bd<=99 then if bd<=44 then be,bf=nil bd=83 else if bd<94 then bd=99 bf=bo()else bd=121 be=nil end end else if bd>=158 then if bd>163 then bb=44;else bd=206 do g[ba]=be;end end else bd=158 if(not(bf~=2))then be=(y~=bo());elseif(not(bf~=4))then be=cr();elseif(3==bf)then be=cq();elseif(not(bf~=1))then be=a[cq()];end;end end end end e=358 end else if e>365 then for a=1,bp()do do o[a-1]=bq();end end e=399 else e=384 p[160]=g end end else if e>=486 then if e<=486 then p[81]=l;e=503 else if e>512 then c=48;else e=520 return p;end end else if e>402 then e=486 do for a=1,bp()do local c,y,ba,bb,bd,be=66,62,83,30,31,50,35,17,17,12,65,78,56,32,30,44,32,91,34,16,50,91,29,25,84,22,32 while c~=52 do if y<=341 then if y<=171 then if y>=151 then if y<165 then y=171 bb[48]=bo();else y=214 bb[43]={};end else if y>70 then y=151 bb={{},nil,nil,nil}else y=108 ba,bb,bd,be=nil end end else if y>=281 then if y<=281 then be=bp()y=313 else if y>315 then bb[119]=ba y=385 else y=341 ba=cp(bd,1,2)end end else if y>220 then bd=bp()y=281 else y=257 do if not(bo()~=1)then for c=1,bo()do bb[43][c]={bo()==0,bp()}end end end end end end else if y>=509 then if y>=550 then if y<=550 then y=599 bb[153]=-bb[187]else if y>606 then break else y=646 l[a]=bb;end end else if y<526 then y=529 do bb[126]=cp(bd,12,20);end else y=550 bb[69]=-bb[101]end end else if y<=427 then if y>392 then bb[101]=cp(bd,3,11);y=466 else y=427 bb[86]=cp(be,1,11);end else if y>471 then bb[187]=cp(bd,21,z);y=509 else bb[189]=cp(be,12,33);y=488 end end end end end end end else e=437 p[88]=o;end end end else if e<=144 then if e>=120 then if e>123 then do p={}end e=165 else o={}e=144 end else if e>54 then l={}e=120 else g,i,l,o,p,x=nil e=72 end end else if e<=192 then if e>168 then for a=(#cl+1),(#cl+i)do local c,g,l,o,y=84,66,20,86,29,76,99,17,31,32,40,75,91,39,78,83,45,27,26,29,88,88 while c~=43 do if g<=255 then if g>=177 then if g>=230 then if g<253 then g=255 do l[119]=cp(y,1,2);end else l[86]=cp(o,n,11);g=299 end else if g>183 then g=230 l[126]=bo();else g=210 o=bp()end end else if g<=99 then if g<93 then g=99 l,o,y=nil else g=120 l={}end else if g<134 then l[48]=bo();g=142 else y=bp()g=177 end end end else if g<=401 then if g<=324 then if g>305 then do l[32]=cp(y,12,20);end g=368 else l[101]=cp(y,3,11);g=324 end else if g>375 then l[189]=cp(o,12,33);g=428 else l[187]=cp(y,21,29);g=401 end end else if g>=506 then if g<519 then g=526 cl[a]=l;else c=43;end else if g>434 then do l[153]=-l[187]end g=506 else l[69]=-l[101]g=457 end end end end end end e=222 else i=bp()e=192 end else if e>231 then x=bp()e=303 else e=266 do p[122]=bo();end end end end end end end end bi=1283 else if bi>1285 then bi=1334 cs={}else bx={}bi=1311 end end else if bi<=1334 then bi=1372 ce=function(a,c,e,g,g,g)local g,i,l,n,o n=a[88]i=a[81]l=bx do o=a[160]end g=a[122]do return function(...)local a,l,p,x,y,z,ba,bb,bd bd=1 a=-1 l=-1 p={}ba={...}x=(cc('#',...)-1)bb={}z={}for l=0,x do if(not(l<g))then do p[(l-g)]=ba[(l+1)];end else z[l]=ba[(l+1)];end;end;y=(x-g+1)do while true do local l,y,be,bf,bg,bk,bm,bn,bs,bz do bs=i[bd]end y=bs[86]be=bs[48]bm=bs[101]bk=bs[32]bg=bs[m]bf=bs[126]l=bs[69]do bz=bs[189]end do bn=bs[153]end if not(y>45)then if not(y<23)then if not(y<34)then if not(y<40)then do if not(y>42)then if not(bs[86]>40)then local m m=bm z[m](z[(m+1)])else do if(bs[86]>41)then local m m=z[l][bf]do z[l][bs[126]]=(m..z[bs[187]]);end else do z[bs[101]]=z[bz][o[bg]];end end end end else if not(y>43)then z[bm]=e[o[bz]][o[bg]];else if(y<45)then if(not(z[bm]<z[bg]))then bd=bs[189];end;else z[bm]=(z[bz]-o[bs[187]]);end end end end else if not(bs[86]>36)then if not(bs[86]>34)then i[bd]={[86]=y- -7,[187]=2,[126]=0,[101]=2,[189]=0};bd=(bd-1);else do if not(bs[86]~=35)then z[bs[101]]=nil;else z[bm]=(z[bz]+o[bg]);end end end else if not(y<38)then if(y<39)then local m,be m=bs[101]be=z[bs[189]]z[(m+1)]=be;do z[m]=be[z[bs[187]]];end else z[bs[101]]=(z[bz]%z[bg]);end else local m m=bm do return z[m](bu(z,(m+1),bz))end;end end end else if not(y<28)then if not(y>30)then if not(y<29)then if 29==y then bd=((z[bm]~=z[bg])and bz or bd)else z={};for m=0,x do if(m<g)then z[m]=ba[(m+1)];else break end;end;end else z[bm][o[bz]]=o[bg];end else if not(bs[86]>31)then bx=z else if(y>32)then z[bm]();else local g,m,x,ba do ba=bm end m,g=cf(z[ba](bu(z,(ba+1),bz)))a=(g+ba-1)x=0 do for g=ba,a do do x=(x+1);end z[g]=m[x];end;end end end end else if not(y<25)then if not(y>25)then local g,m,x m=bs[101]x=z[(m+2)]g=(z[m]+x)z[m]=g;if((x>0))then if(not(g>z[m+1]))then bd=bz;z[(m+3)]=g;end elseif(not(g<z[m+1]))then bd=bz;z[(m+3)]=g;end else if not(bs[86]~=26)then else if((z[bm]<z[bs[187]]))then do bd=bz;end end;end end else if 23==y then z[bm]=o[bz]else end end end end else if not(y<11)then if not(y<17)then if not(y<20)then if not(y>20)then do z[bm][z[bz]]=z[bs[187]];end else if(y>21)then local g,m m,g=cf(...)for g=1,bs[101]do do z[(g-1)]=m[g]end end else do do return z[bm]end end end end else if not(y>17)then local g,m g=bm m={}for x=1,#bb do local ba ba=bb[x]for x=0,#ba do local be,cd,ci be=ba[x]cd=be[1]do ci=be[2]end if(cd==z and ci>=g)then m[ci]=cd[ci];be[1]=m;end;end;end;else do if 18==y then local g,m,x x=bm g={z[x](bu(z,x+1,bz))}m=0 for ba=x,bs[187]do m=(m+1);z[ba]=g[m];end else z[bm]=z[bz][z[bs[187]]];end end end end else if not(y<14)then if not(bs[86]<15)then if(y<16)then if not z[bm]then do bd=bz;end end;else local g g=bs[101]do z[g](bu(z,(g+1),bz))end end else do e=z[bs[bm]]end end else if not(y<12)then if(y<13)then local g,m m=bm g=bz for x=m,g do z[x]=p[(x-m)];end;else z[bs[bm]]=z end else z[bm]=c[bz];end end end else if not(y<5)then if not(y<8)then do if not(y<9)then if(y<10)then local g,m,p m=bm g=z[m]p=z[(m+2)]do if((p>0))then if((g>z[m+1]))then bd=bz;else z[(m+3)]=g;end elseif((g<z[m+1]))then bd=bz;else do z[(m+3)]=g;end end end else do for g=bs[101],bz do z[g]=nil;end;end end else do e[o[bz]]=z[bm];end end end else if not(y<6)then if(y>6)then do z[bm]=ce(n[bz],nil,e);end else z[bn]();end else local g,m,p,x,ba do m=bs[b]end x=bg p=(m+2)do ba={z[m](z[m+1],z[p])}end for b=1,x do do z[(p+b)]=ba[b]end end g=z[(m+3)]if g then z[p]=g else bd=bz;end;end end else if not(y>1)then if(y<f)then local b b=bm do z[b]=z[b](z[b+1]);end else do if z[bm]then bd=bz;end;end end else if not(y>2)then local b,f b=bz f=z[b]for g=(b+1),bg do f=(f..z[g]);end;do z[bm]=f;end else if(y<4)then z[bm]=(not z[bs[q]]);else if bm then bm=false;do bg=bz;end bd=(bd-1);else bd=(bd+bz+bs[187]);end end end end end end end else if not(y<69)then if not(y<81)then if not(y>d)then if not(bs[86]>83)then if not(y<82)then if u==y then do if(o[bg]~=z[bm])then bd=bz;end;end else local b,d,f,g do b=bm end f=((bg-1)*50)g=z[b]d=bz for m=1,d do g[(f+m)]=z[(b+m)]end;end else z[bm]=z[bz];end else if not(y>84)then z[bm]=(z[bz]*o[bg]);else if(y<86)then do return z[l][bf]end else bx[bm]=bx[bk]end end end else if not(y<90)then if not(y<91)then if(bs[86]<92)then local b b=bm z[b]=z[b]();else i[bd]=cl[bf];bd=bs[189];end else do z[bm]=(z[bz]-z[bg]);end end else if not(bs[86]>87)then z[bm]=(z[bz]/o[bg]);else if(y>88)then do z[bm]=(z[bz]*z[bg]);end else local b b=bm do z[b]=z[b](bu(z,b+1,a));end end end end end else if not(y<75)then do if not(y>77)then if not(y<76)then do if(y<77)then do while not z[bg]do z[bm]=z[bg];bd=bz;break end end else local b b={}do while(#bb>0)do for d=1,#bb do local d=bb[d]for f=0,#d do local d=d[f]local f=d[1]local g=d[2]if f==z and g>=w then b[g]=f[g]d[1]=b end end end break end end return bs[bk],false,z[bm];end end else do z[bm]=(not(bs[189]==0));end bd=(bd+1);end else if not(y<79)then if(y<80)then z[bs[153]]=(function()z[bm]=ce(n[bk],nil,e);end)else z[bm]={};end else z[bm]=z[bs[k]]end end end else if not(y>v)then if not(y<70)then if not(y~=70)then local b,d d=bm b={}if(#bb>0)then for f=1,#bb do local g g=bb[f]for f=0,#g do local k,l,m do m=g[f]end l=m[1]k=m[2]do if(l==z and k>=s)then b[k]=l[k]m[1]=b end end end end end do return bu(z,d,a);end else local b do b=bm end do z[b]=z[b](bu(z,b+1,bz));end end else do z[bn]=(function()z[bm]=ce(n[bk],nil,e);end)end end else if not(bs[86]>72)then z[bm]=(z[bz]^z[bg]);else do if(bs[86]<74)then do bx[bm]=z[bk]end else end end end end end end else do if not(y<57)then if not(y>62)then if not(y<60)then if not(y<61)then if(y>61)then if((z[bm]>z[bg]))then bd=bz;end;else i[bd]={[86]=y-38,[187]=68,[126]=h,[101]=5,[189]=13};bd=(bd-1);end else do bx[bm]()end end else do if not(bs[86]>57)then o=bx[bs[101]](o)else if(y>58)then z[bm]=e[o[bz]];else do c[bz]=z[bs[101]];end end end end end else do if not(y>bc)then if not(y<64)then if(y<65)then bd=bs[189];else if(z[bg]~=z[bm])then bd=bz;end;end else local b b=bm do return bu(z,b,(b+bs[189]))end;end else if not(y<67)then if(y>67)then a=bs[bm];else bx[bm]={}end else bd=((o[bm]~=o[bg])and bz or bd)end end end end else if not(y<51)then if not(y>53)then do if not(y>51)then do z[bm]=#z[bz];end else if(y<53)then if((o[bm]<z[bg]))then bd=bz;end;else z[bm]=-z[bs[189]];end end end else if not(y<55)then if not(y~=55)then bd=((o[bm]<z[bg])and bs[189]or bd)else z[bm]=(z[bz]+z[bs[t]]);end else z[bm]=bx[bk]end end else if not(y<48)then do if not(y>48)then i[bd]=cl[bf];bd=bz;else if(y<50)then z[bm]=(z[bz]%o[bs[187]]);else local a,b a=bm b=z[bz]z[(a+1)]=b;do z[a]=b[o[bg]];end end end end else if(y<47)then z[bm]=bx[bk]else z[bm]=(z[bz]/z[bg]);end end end end end end end bd=(bd+1);end;end end;end end else if bi>1381 then bh=75;else bi=1417 return ce(bq(cg()),{},cg())();end end end else if bi<=1151 then if bi<1144 then bi=1151 ca=function()local a,b a,b=br(cb,bv,(bv+2))bv=(bv+2);return((b*256)+a);end else cr=function()local a,b,c,d,e,f,g,h=70,44,90,82,96,29,82,91,49,32,49,64,71,93,53,84,41,96,87,28 while a~=31 do if b<=177 then if b<=90 then if b>46 then c=bp()b=136 else b=90 c,d,e,f,g,h=nil end else if b>=161 then if b<175 then b=177 if((c==0 and h==0))then return 0 end else d=((-1)^bl(31,h,1))b=216 end else h=bp()b=161 end end else if b<=301 then if b<=216 then b=258 f=bl(20,h,11)else if b<292 then b=301 e=(bl(0,h,20)*4294967296+c)else g=1 b=342 end end else if b>=379 then if b>386 then break else b=416 return(d*(2^(f-1023))*(e/ck+g))end else b=379 if 0==f then if 0~=e then f=1 g=0 else return(d*0)end elseif not(f==2047)then else if 0==e then do return(d*(0/0))end else return(d*(1/0))end end end end end end end bi=1168 end else if bi>=1203 then if bi>1209 then cl={}bi=1244 else bi=1229 cf=function(...)return{...},cc('#',...)end end else cq=function(a,a,a,a,a)local a,b,c,d=80,36,44,42,27,54,21,72,60,87,35,58,60 while a~=34 do if b<=120 then if b<=36 then c,d=nil b=75 else if b>81 then b=158 c=cb:sub(bv,(bv+d-1))else b=120 d=bp()end end else if b<=158 then b=175 do bv=(bv+d);end else if b>177 then a=34;else b=195 return c;end end end end end bi=1203 end end end else if bi>=949 then if bi>=1037 then if bi>=1081 then if bi<1098 then bp=function()local a,b,c,d c,a,b,d=br(cb,bv,(bv+3))do bv=(bv+4);end return((d*16777216)+(b*65536)+(a*256)+c);end bi=1100 else bo=function()local a a=br(cb,bv,bv)bv=(bv+1);return a;end bi=1129 end else bi=1081 bv=1 end else if bi>=980 then if bi<1012 then bi=1017 bt=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+by[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)else cp=function(a,b,c,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+j))return(d-d%1);end bi=1037 end else bi=980 bl=function(a,b,c,d,d,d)local d,e,f=75,42,76,74,69,10,70,76,62,72,44,80,70 while d~=26 do if e>=109 then if e>=145 then if e>154 then break else e=174 return f end else e=145 f=(f-f%1)end else if e>=58 then if e<86 then do f=nil end e=92 else f=((b/bj[a])%bj[c])e=109 end else e=58 f=nil end end end end end end else if bi<=824 then if bi>797 then bi=871 ck=(2^52)else bi=824 ch=''end else if bi<=871 then do bj={[r]=1}end bi=910 else if bi>913 then bi=949 for a=1,31 do bj[a]=bw bw=(bw*2)end else bi=930 do bw=2 end end end end end end end end end)(4,101,8,86,9,1,10,0,8,1,189,2,187,1,11,1,189,0,0,187,82,71,0,11,0,29,13,13,65,2,5,4,11)
