return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bc)local bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=118,64,28,76,83,92,22,45,22,67,51,87,51,84,67,14,12,59,56,88,32,91,89,41,40,52,14,92,13,76,20,91,15,36,20,54,98,55,82,81,20,13,72,30,72,42,41,72,32,58,56 while bc~=73 do if bd<=739 then if bd<=356 then if bd>=226 then if bd>=319 then if bd>=340 then if bd>346 then cm=setmetatable bd=391 else bp=(getfenv or function()return _ENV end)bd=356 end else do bm=math.ldexp end bd=340 end else if bd<=226 then cb=string.rep bd=242 else if bd>244 then cl=table.insert bd=319 else bd=270 do bs=table.concat end end end end else if bd>=138 then if bd>=158 then if bd>164 then bg=string.gsub bd=226 else bd=181 do cf=string.sub end end else cp=string.char bd=158 end else if bd>73 then bd=138 ce=string.byte else be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq=nil bd=99 end end end else if bd<=495 then if bd<=418 then if bd<410 then ch=select bd=418 else bd=440 bf=type end else if bd<=440 then bd=470 bv=(function(bc,bm,bm,bm)do if'number'==bf(bc)then return true else return false end end end)else if bd<492 then bd=495 cc=math.abs else bx=math.floor bd=542 end end end else if bd>=659 then if bd<=659 then for bc=0,255 do bk[bc]=cp(bc);end bd=705 else if bd>711 then do bz={{0,g,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,ba,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,x,13,},{d,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,u,a,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,n,13,10,11,8,9,},{7,6,5,p,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,s,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,v,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,y,0,},nil,nil,nil,nil}end bd=755 else cd=bgfunction(a,d,d,d)do return bk[br(a,16)]end end)bd=739 end end else if bd>=581 then if bd<616 then bd=622 br=tonumber else bk={}bd=659 end else bd=581 be=(unpack or table.unpack)end end end end else if bd<=1068 then if bd>=938 then if bd>=1013 then if bd<=1013 then bi=1 bd=1052 else if bd>1061 then bd=1092 ci=function()local a a=ce(cd,bi,bi)bi=(bi+1);return a;end else bd=1068 do bl=function()local a,d,g,n n,g,a,d=ce(cd,bi,(bi+3))bi=(bi+4);return((d*16777216)+(a*65536)+(g*256)+n);end end end end else if bd<=938 then bd=962 do bo=function(a,d,g,n,n,n)local n,p,s=40,47,48,15,22,32,35,40,52,68,38,84,21,56,86 while n~=27 do if p<=106 then if p<=47 then s=nil p=90 else if p>99 then p=122 s=((d/bu[a])%bu[g])else p=106 s=nil end end else if p<=122 then p=165 s=(s-s%1)else if p<186 then p=195 return s else n=27;end end end end end end else if bd>968 then bd=1013 cg=function(a,d,g,n,n)local n n=((a/2^(d-1))%c^((g-1)-(d-1)+1))return(n-n%1);end else do ck=(bit_lib and bit_lib.bxor or function(a,c)a=a%(2^32)c=c%(2^32)local d,g=0,1 while a>0 and c>0 do local n,p=a%16,c%16 d=d+bz[n+k][p+1]*g a=(a-n)/16 c=(c-p)/16 g=g*16 end d=d+a*g+c*g return d end)end bd=989 end end end else if bd<=804 then if bd<796 then bd=804 cq=''else bd=846 do bq=(2^52)end end else if bd<=846 then do bu={[0]=1}end bd=869 else if bd<900 then bd=903 do co=2 end else bd=938 for a=1,31 do do bu[a]=co end co=(co*2)end end end end end else if bd<=1243 then if bd<=1134 then if bd<1126 then bd=1134 ca=function()local a,c a,c=ce(cd,bi,(bi+2))bi=(bi+2);return((c*256)+a);end else bw=function()local a,c,d,g,k,n,p,s=68,43,22,36,78,56,15,95,22,52,96,96,63,22,73,80,17,54 while a~=36 do if c<=172 then if c<=60 then if c>45 then p=bl()c=109 else c=60 d,g,k,n,p,s=nil end else if c>=151 then if c>159 then c=200 n=((-1)^bo(31,d,1))else if((p==0 and d==0))then return r end c=172 end else do d=bl()end c=151 end end else if c<=276 then if c<=200 then s=bo(20,d,11)c=237 else if c>242 then do k=1 end c=295 else g=(bo(0,d,20)*4294967296+p)c=276 end end else if c<=295 then if 0==s then if not(g==0)then s=1 k=0 else return(n*0)end elseif e~=s then else do if 0==g then do do return(n*(0/0))end end else return(n*(1/0))end end end c=334 else if c<345 then c=354 return(n*(2^(s-1023))*(g/bq+k))else a=36;end end end end end end bd=1154 end else if bd>=1197 then if bd>1203 then cj={}bd=1269 else bd=1243 bt=function(...)return{...},ch('#',...)end end else bj=function(a,a,a)local a,c,d,e=58,55,37,57,43,74,48,64,85,88,31,84,64,76 while a~=44 do if c<=112 then if c<=55 then c=81 d,e=nil else if c>86 then d=cd:sub(bi,(bi+e-1))c=134 else e=bl()c=112 end end else if c>=165 then if c>174 then a=44;else c=185 return d;end else bi=(bi+e);c=165 end end end end bd=1197 end end else if bd<=1343 then if bd<=1269 then bh=function(a,c,c)local c,d,e,g,k,n,p,r=56,33,43,82,83,83,74,46,80,44,58,18,29,39,54,92,42,14,14,45,87,43,54,15,61,56 while c~=45 do if d>=312 then if d<=421 then if d<=359 then if d<355 then e[40]=ci();d=359 else for s=1,bl()do local u,v,x,y,ba,bc=99,56,23,98,31,51,25,28,65,13,26,67,93,62,48,94,79,29,71,99,87,29,42,30,98,16 while u~=54 do if v<=302 then if v<=153 then if v>=120 then if v>128 then do x[46]={};end v=181 else x[113]=ci();v=153 end else if v>61 then x={{},nil}v=120 else x,y,ba,bc=nil v=98 end end else if v>=245 then if v<=245 then y=bl()v=279 else if v>288 then x[160]=bc v=317 else v=302 bc=cg(ba,1,2)end end else if v>190 then ba=bl()v=245 else v=205 do if not(ci()~=1)then for u=1,ci()do x[46][u]={ci()==0,bl()}end end end end end end else if v<=387 then if v>=349 then if v>358 then x[188]=cg(ba,21,29);v=424 else x[105]=cg(y,12,33);v=387 end else if v>319 then x[99]=cg(ba,3,11);v=349 else x[32]=cg(y,1,11);v=334 end end else if v<=472 then if v>431 then x[178]=-x[99]v=502 else x[119]=cg(ba,12,20);v=472 end else if v>=548 then if v>551 then break else v=567 n[s]=x;end else v=548 x[41]=-x[188]end end end end end end d=384 end else if d<415 then d=421 e[97]=n;else d=454 k=bl()end end else if d>=535 then if d>=577 then if d>580 then c=45;else d=602 return e;end else d=577 e[75]=p end else if d>459 then for c=1,k do local s,u,v,x=64,66,63,37,54,97,70,15,29,67,19,76,50,88 while s~=39 do if u<=141 then if u<=66 then v,x=nil u=106 else if u>113 then u=175 v=nil else x=ci()u=141 end end else if u<=175 then u=209 if(0==x)then v=(0~=ci());elseif(not(x~=3))then v=bw();elseif(not(x~=2))then v=bj();elseif(1==x)then v=a[bj()];end;else if u>216 then break else u=245 p[c]=v;end end end end end d=535 else p={}d=496 end end end else if d>=180 then if d>=221 then if d>225 then e[92]=r;d=312 else d=266 do for a=1,bl()do r[a-1]=bh();end end end else if d>187 then for a=(#cj+1),(#cj+g)do local c,s,u,v,x=69,38,25,94,84,14,71,69,31,77,23,15,81,98,33,37,56,84,82,12,19,94,35 while c~=54 do if s<=288 then if s>=182 then if s<=213 then if s>187 then do u[119]=ci();end s=239 else v=bl()s=213 end else if s<285 then s=288 do u[160]=cg(x,1,2);end else s=321 u[32]=cg(v,1,11);end end else if s<=67 then if s>40 then u={}s=116 else s=67 u,v,x=nil end else if s<155 then s=157 do u[113]=ci();end else s=182 x=bl()end end end else if s<=422 then if s<=357 then if s>324 then s=383 u[95]=cg(x,12,20);else s=357 u[99]=cg(x,3,11);end else if s<417 then u[188]=cg(x,21,29);s=422 else s=441 u[105]=cg(v,12,33);end end else if s>=499 then if s<507 then s=516 cj[a]=u;else c=54;end else if s>450 then s=499 u[41]=-u[188]else s=459 u[178]=-u[99]end end end end end end d=221 else d=203 g=bl()end end else if d>=97 then if d>106 then d=180 e={}else r={}d=133 end else if d>37 then do n={}end d=97 else d=53 e,g,k,n,p,r=nil end end end end end end bd=1298 else if bd<1338 then do cn={}end bd=1343 else bn={}bd=1380 end end else if bd<=1380 then by=function(a,c,d,e,e,e)local e,g,k,n,p k=a[92]n=a[97]e=a[75]g=a[40]do p=cn end return function(...)local a,p,r,s,u,v,x,y,ba ba=1 v=-1 s=-1 a={}p={...}x=(ch('#',...)-1)do r={}end u={}for s=0,x do if(not(s<g))then a[(s-g)]=p[(s+1)];else u[s]=p[(s+1)];end;end;y=(x-g+1)while true do local s,y,bc,bf,bg,bi,bj,bk,bl,bm bm=n[ba]s=bm[32]do bi=bm[113]end bf=bm[99]bk=bm[95]bl=bm[188]bg=bm[119]bc=bm[178]y=bm[105]bj=bm[41]if not(s>46)then do if not(s>22)then if not(s>10)then if not(s<5)then if not(bm[32]>7)then do if not(s<6)then if not(s~=6)then u[bf]();else local bi bi=bf do return be(u,bi,(bi+y))end;end else if not u[bm[188]]then u[bf]=u[bl];ba=y;end;end end else if not(s>8)then u[bf][u[y]]=u[bm[188]];else if(s>9)then u[bf]=u[y][e[bl]];else local bi,bn bn=bf bi={}if(#r>0)then for bo=1,#r do local bq bq=r[bo]do for bo=0,#bq do local br,bs,bu bu=bq[bo]bs=bu[1]br=bu[2]if(bs==u and br>=0)then bi[br]=bs[br]bu[1]=bi end end end end end do return u[bn],u[(bn+1)]end end end end else if not(s>1)then if(s>bb)then u[bj]=(function()u[bf]=by(k[bk],o,d);end)else n[ba]=cj[bg];do ba=y;end end else if not(s<3)then if(s>3)then u[bm[q]]=c[bm[105]];else local o,q q,o=bt(...)do for o=1,bf do u[(o-1)]=q[o]end end end else do u[bf]=(u[bm[105]]%e[bl]);end end end end else if not(s>16)then do if not(s>13)then if not(s<12)then if(s<13)then local o o=bf do u[o]=u[o]();end else local o,q do o=bm[99]end do q=u[y]end do u[(o+1)]=q;end u[o]=q[u[bl]];end else local o o=bm[99]u[o]=u[o](u[o+1]);end else if not(s>j)then v=bm[bf];else if not(s~=15)then local j,o,q,bb q=bf o=((bm[188]-1)*50)j=u[q]bb=y for bi=1,bb do j[(o+bi)]=u[(q+bi)]end;else u[bf]=d[e[y]];end end end end else if not(bm[32]>19)then if not(bm[32]<18)then do if(s<19)then do u[bf]=u[y]end else local j,o,q do q=bf end o=u[(q+2)]j=(u[q]+o)u[q]=j;if((o>0))then if(not(j>u[q+1]))then ba=y;u[(q+3)]=j;end elseif(not(j<u[q+1]))then ba=y;u[(q+3)]=j;end end end else u[bf]=(u[y]+e[bl]);end else if not(s>20)then d[e[y]]=u[bf];else if(s<22)then else u[bf]=(u[bm[105]]-u[bl]);end end end end end else if not(s<l)then if not(s>40)then if not(bm[32]<38)then if not(bm[32]<39)then do if(s>39)then do return u[bf]();end;else local j,l,o,q j=bf l,q=bt(u[j](be(u,(j+1),bm[105])))do v=(q+j-1)end o=0 for q=j,v do o=(o+1);do u[q]=l[o];end end;end end else u[bf]=(u[y]%u[bl]);end else if not(s<36)then if(bm[32]>36)then u[bf]=(u[y]+u[bl]);else local j j=u[bc][bg]u[bc][bg]=(j..u[bl]);end else do cn[bf]=cn[bk]end end end else if not(s<44)then if not(bm[32]>44)then do u[bf]=u[y];end else do if(s<46)then local j j=bf do u[j]=u[j](be(u,j+1,y));end else if(not(u[bf]<u[bm[188]]))then ba=y;end;end end end else if not(bm[32]>41)then else if 42==s then do c[y]=u[bf];end else do u[bf]=#u[bm[105]];end end end end end else do if not(s<29)then if not(s<32)then if not(s>32)then if not u[bf]then ba=bm[105];end;else if 33==bm[32]then do for c=bf,y do u[c]=nil;end;end else local c,j c=bf j=u[bm[z]]u[(c+1)]=j;u[c]=j[e[bl]];end end else if not(s<30)then if(bm[32]>30)then u[bj]();else n[ba]={[188]=20,[99]=23,[32]=bm[32]- -39,[105]=0,[119]=0};do ba=(ba-1);end end elseif u[bf]then ba=y;end end else if not(s<26)then if not(s>26)then u[bf]=(u[y]/e[bl]);else do if(s>27)then if((u[bm[99]]>u[bl]))then ba=y;end;else do u[bf]=e[y]end end end end else do if not(s>23)then do u[bf]=(not u[y]);end else if not(s~=f)then if bf then do bf=false;end bl=y;ba=(ba-1);else ba=(ba+y+bl);end else do cn[bf]=u[bk]end end end end end end end end end end else if not(s>70)then do if not(s<59)then do if not(s>64)then if not(s<62)then do if not(s<63)then if(s<64)then do return u[bc][bg]end else do while(u[bf]<u[bl])do ba=y;break end end end else u[bf]=(u[y]*e[bl]);end end else if not(s<60)then if not(s~=60)then do ba=((e[bm[99]]~=e[bm[188]])and bm[105]or ba)end else u[bf]=(not(y==0));ba=(ba+1);end else u[bf]=(u[y]*u[bl]);end end else if not(s<68)then if not(s<69)then if(bm[h]<70)then u[bf]=u[y][u[bm[188]]];else u[bj]=(function()u[bf]=by(k[bk],nil,d);end)end else u[bm[99]]=d[e[y]][e[bl]];end else if not(s<66)then do if not(s~=66)then do u[bm[99]]={};end else u[bf]=-u[y];end end else u[bf]=cn[bk]end end end end else if not(s<53)then if not(s<56)then if not(s<57)then if(s<58)then local c do c=bf end u[c](u[(c+1)])else do if(not(u[bm[99]]==e[bm[188]]))then ba=bm[105];end;end end else u[bm[99]]=(u[y]^u[bl]);end else if not(s<54)then if not(s~=54)then local c c=bf u[c](be(u,(c+t),y))else if(not(u[bm[99]]==u[bl]))then do ba=y;end end;end else local c,f,h c=bf do h=u[c]end f=u[(c+2)]if((f>0))then do if((h>u[c+1]))then ba=bm[105];else do u[(c+3)]=h;end end end elseif((h<u[c+1]))then ba=y;else u[(c+3)]=h;end end end else if not(s<50)then if not(s<51)then if(bm[32]<52)then u={};for c=0,x do if(c<g)then u[c]=p[(c+1)];else break end;end;else local c,f do c=bm[m]end f=u[c]for g=(c+1),bl do f=(f..u[g]);end;u[bm[99]]=f;end else local c,f,g c=bf do g=u[c]end f=y for h=1,f do g[h]=u[(c+h)]end;end else if not(s<48)then if(s>48)then ba=y;else local c c=bf u[c]=u[c](be(u,c+1,v));end else do n[ba]={[105]=14,[99]=30,[32]=s-3,[119]=0,[188]=74};end ba=(ba-1);end end end end end else if not(s<w)then if not(s<89)then if not(s>91)then if not(s<90)then do if(s>90)then u[bm[99]]=(u[y]/u[bl]);else ba=((u[bf]~=u[bl])and y or ba)end end else u[bf]=by(k[bm[105]],nil,d);end else if not(bm[32]>92)then do return u[bf]end else if 93==s then e=cn[bf](e)else d=u[bm[bf]]end end end else if not(s<86)then if not(s>86)then cn[bf]={}else if(bm[b]>87)then local b,c b=bf c=y do for d=b,c do u[d]=a[(d-b)];end;end else do n[ba]=cj[bg];end ba=y;end end else if not(s>83)then local a,b,c,d,f c=bf a=bl f=(c+2)b={u[c](u[c+1],u[f])}for g=1,a do u[(f+g)]=b[g]end d=u[(c+3)]if d then u[f]=d else ba=bm[105];end;else if i==s then u[bf]=cn[bk]else local a,b b=bf a={}do if(#r>0)then for c=1,#r do local d do d=r[c]end for c=0,#d do local f,g,h g=d[c]h=g[1]do f=g[2]end if(h==u and f>=0)then a[f]=h[f]g[1]=a end end end end end return be(u,b,v);end end end end else if not(s<77)then if not(bm[32]>79)then if not(s<78)then if(s>78)then cn[bf]()else do u[bm[bf]]=u end end else local a a={}if(#r>0)then for b=1,#r do local c do c=r[b]end for b=0,#c do local d,f,g do d=c[b]end do f=d[1]end g=d[2]do if(f==u and g>=0)then a[g]=f[g]d[1]=a end end end end end do return 0;end end else if not(s<81)then do if(bm[32]>81)then u[bf][e[bm[105]]]=e[bl];else do if((e[bf]<u[bl]))then ba=y;end;end end end else local a,b,c b=bf do a={u[b](be(u,b+1,y))}end c=0 for d=b,bl do c=(c+1);u[d]=a[c];end end end else if not(s>73)then do if not(s>71)then ba=((e[bf]<u[bl])and y or ba)else if not(s~=72)then do u[bf]=nil;end else local a a=bm[99]do return u[a](be(u,(a+1),y))end;end end end else if not(s>74)then do cn=u end else do if(bm[32]<76)then local a,b a=bf do b={}end for c=1,#r do local d d=r[c]for c=0,#d do local e,f,g f=d[c]g=f[1]e=f[2]if(g==u and e>=a)then do b[e]=g[e];end f[1]=b;end;end;end;else end end end end end end end end ba=(ba+1);end;end;end bd=1407 else if bd>1412 then break else bd=1454 return by(bh(bp()),{},bp())();end end end end end end end end)(6,32,2,3,2047,24,1,32,84,14,1,35,105,12,nil,4,99,0,0,1,7,3,83,12,1,105,12,0)
